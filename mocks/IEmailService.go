// Code generated by mockery v2.53.5. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// IEmailService is an autogenerated mock type for the IEmailService type
type IEmailService struct {
	mock.Mock
}

// SendVerificationEmail provides a mock function with given fields: email, code, token
func (_m *IEmailService) SendVerificationEmail(email string, code string, token string) error {
	ret := _m.Called(email, code, token)

	if len(ret) == 0 {
		panic("no return value specified for SendVerificationEmail")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, string) error); ok {
		r0 = rf(email, code, token)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SendWithAttachment provides a mock function with given fields: to, subject, body, attachmentPath
func (_m *IEmailService) SendWithAttachment(to string, subject string, body string, attachmentPath string) error {
	ret := _m.Called(to, subject, body, attachmentPath)

	if len(ret) == 0 {
		panic("no return value specified for SendWithAttachment")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, string, string) error); ok {
		r0 = rf(to, subject, body, attachmentPath)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewIEmailService creates a new instance of IEmailService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIEmailService(t interface {
	mock.TestingT
	Cleanup(func())
}) *IEmailService {
	mock := &IEmailService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
